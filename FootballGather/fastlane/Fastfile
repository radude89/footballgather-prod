default_platform(:ios)

before_all do
  xcversion(version: "~> 13.0")
  clear_derived_data
end

SIMULATORS = [
  'iPhone 8'
]

TEMP_KEYCHAIN_USER = ENV["KEYCHAIN_NAME"]
TEMP_KEYCHAIN_PASSWORD = ENV["KEYCHAIN_PASSWORD"]

platform :ios do
  desc "Runs the unit tests of FootballGather"
  lane :ut do
    scan(
      scheme: "FootballGather-CI",
      clean: true,
      reset_simulator: true
    )
  end

  desc "Runs the UI tests of FootballGather"
  lane :ui do
    scan(
      scheme: "UITests",
      clean: true,
      reset_simulator: true,
      devices: SIMULATORS
    )
  end

  desc "Takes screenshots"
  lane :screenshots do
    capture_ios_screenshots(
      clear_previous_screenshots: true
    )

    capture_ios_screenshots(
      dark_mode: true
    )
  end

  desc "Distributes IPA to AppStore"
  lane :distribute_release_app do
    update_keychain
    connect_to_appstore
    sync_device_info
    sync_certs(type: "appstore")
    bump_versions
    build_release_app
    upload_app_to_testflight
    nuke_keychain
  end

  private_lane :update_keychain do
    nuke_keychain
    init_keychain
  end

  private_lane :nuke_keychain do
    delete_keychain(
      name: "#{TEMP_KEYCHAIN_USER}",
    ) if File.exist? File.expand_path("~/Library/Keychains/#{TEMP_KEYCHAIN_USER}-db")
  end

  private_lane :init_keychain do
    create_keychain(
      name: "#{TEMP_KEYCHAIN_USER}",
      password: "#{TEMP_KEYCHAIN_PASSWORD}",
      default_keychain: true,
      unlock: true,
      timeout: 3600,
      add_to_search_list: true,
      lock_when_sleeps: true,
      lock_after_timeout: true
    )
  end

  private_lane :sync_device_info do
    register_devices(
      devices_file: "fastlane/Devicefile"
    )
  end

  private_lane :sync_certs do |options|
    selectedType = options[:type]
    match(
      type: selectedType,
      force_for_new_devices: true,
      git_basic_authorization: "#{ENV["MATCH_GIT_BASIC_AUTHORIZATION"]}",
      keychain_name: "#{TEMP_KEYCHAIN_USER}",
      keychain_password: "#{TEMP_KEYCHAIN_PASSWORD}",
      readonly: true
    )
  end

  private_lane :bump_versions do
    version_number = sh("git describe --tags --abbrev=0")
    increment_build_number
    increment_version_number(
      version_number: version_number
    )
  end

  private_lane :build_release_app do
    gym(
      scheme: "FootballGather",
      clean: true,
      output_directory: "./build-store",
      export_method: "app-store"
    )
  end

  private_lane :connect_to_appstore do
    app_store_connect_api_key(
      key_id: "#{ENV["KEY_ID"]}",
      issuer_id: "#{ENV["ISSUER_ID"]}",
      key_content: "#{ENV["KEY_CONTENT"]}",
      duration: "#{ENV["DURATION"]}",
      is_key_content_base64: "#{ENV["IS_KEY_ENCODED"]}",
      in_house: false
    )
  end

  private_lane :upload_app_to_testflight do
    pilot(
      distribute_external: false,
      notify_external_testers: false,
      skip_waiting_for_build_processing: true,
      skip_submission: true
    )
  end

end
